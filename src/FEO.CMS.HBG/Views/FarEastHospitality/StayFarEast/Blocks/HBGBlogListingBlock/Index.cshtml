@inject IContentLoader ContentLoader
@using FEO.CMS.HBG.Business.Dictionary
@model BlogListingViewModel
@if (Model != null)
{
    var bgConfig = Model.Config;
    string bgClass = string.Empty;
    if (bgConfig?.BackgroundColor != null)
    {
        var backgroundColor = ContentLoader.Get<HBGNameValuePairBlock>(bgConfig.BackgroundColor);
        bgClass = "section-" + backgroundColor.Value;
    }
    <div class="wrap-new-section section-blog-listing @bgClass" data-desktop="@Model.PageSize" data-mobile="@Model.PageSizeForMobile">
        <div class="container">

            <h2 class="s-title">@Model.ComponentTitle</h2>
            <div class="filter-by">
                <span class="title">@DictionaryHelper.DictionaryEntry(DictionaryKeys.FilterBy)</span>
                <span class="clear hidden">@DictionaryHelper.DictionaryEntry(DictionaryKeys.ClearAll)</span>
            </div>

            <div class="blog-filter">
                @if (Model.Seasons != null && Model.Seasons.Options.Any())
                {
                    <select name="Seasons" class="custom-select" multiple type="checkbox" placeholder="@DictionaryHelper.DictionaryEntry(DictionaryKeys.Seasons)">
                        @foreach (var item in Model.Seasons.Options)
                        {
                            <option value="@item.Value">@item.Name</option>
                        }
                    </select>
                }
                @if (Model.Locations != null && Model.Locations.Options.Any())
                {
                    <select name="locations" class="custom-select" multiple type="checkbox" placeholder="@DictionaryHelper.DictionaryEntry(DictionaryKeys.Locations)">
                        @foreach (var item in Model.Locations.Options)
                        {
                            <option value="@item.Value">@item.Name</option>
                        }
                    </select>
                }
                @if (Model.Types != null && Model.Types.Options.Any())
                {
                    <select name="Types" class="custom-select" multiple type="checkbox" placeholder="@DictionaryHelper.DictionaryEntry(DictionaryKeys.Types)">
                        @foreach (var item in Model.Types.Options)
                        {
                            <option value="@item.Value">@item.Name</option>
                        }
                    </select>
                }
                @if (Model.Purposes != null && Model.Purposes.Options.Any())
                {
                    <select name="Purposes" class="custom-select" multiple type="checkbox" placeholder="@DictionaryHelper.DictionaryEntry(DictionaryKeys.Purposes)">
                        @foreach (var item in Model.Purposes.Options)
                        {
                            <option value="@item.Value">@item.Name</option>
                        }
                    </select>
                }
                @if (Model.OrderBy != null && Model.OrderBy.Options.Any())
                {
                    <select name="OrderBy" class="custom-select">
                        @foreach (var item in Model.OrderBy.Options)
                        {
                            <option value="@item.Value">@item.Name</option>
                        }
                    </select>
                }
            </div>
            <div class="wrap-blog-listing">
                <div class="lds-spinner"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
                <div class="blog-listing"></div>
                <div class="result-total" data-multiple-result="@DictionaryHelper.DictionaryEntry(DictionaryKeys.Articles)" data-sigle-result="@DictionaryHelper.DictionaryEntry(DictionaryKeys.Article)">@DictionaryHelper.DictionaryEntry(DictionaryKeys.Total) <span class="number">0</span> <span class="text">@DictionaryHelper.DictionaryEntry(DictionaryKeys.Articles)</span></div>
                <div class="text-emty">@DictionaryHelper.DictionaryEntry(DictionaryKeys.NotFoundMessage)</div>
            </div>



        </div>
    </div>
}
<script src="~/scripts/special/custom-select.js"></script>
<script src="~/scripts/special/blog.js"></script>
